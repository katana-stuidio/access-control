# Usando a versão mais recente do Golang
FROM golang:1.20-alpine AS base_builder

LABEL maintainer="Charles <charles.tenorio.dev@gmail.com>"
WORKDIR /myapp/

# Copia os arquivos de definição de dependências
COPY go.mod go.sum ./

# Baixa todas as dependências do Go
RUN go mod download

# Stage 2: Builder - compila o aplicativo Go
FROM base_builder AS builder

WORKDIR /myapp/

# Copia o código-fonte
COPY . .

# Argumentos para versão e commit
ARG PROJECT_VERSION=1
ARG CI_COMMIT_SHORT_SHA=1

# Compila o binário com flags de otimização e renomeia para sera-login
RUN go build -ldflags="-s -w -X 'main.VERSION=$PROJECT_VERSION' -X 'main.COMMIT=$CI_COMMIT_SHORT_SHA'" -o sera-login cmd/api/main.go

# Stage 3: Minimal Docker Image - cria uma imagem final com o binário compilado
FROM alpine:3.18

WORKDIR /app/

# Copia o binário compilado da etapa anterior para a imagem final
COPY --from=builder /myapp/sera-login .

# Define o ponto de entrada da aplicação
ENTRYPOINT ["./sera-login"]